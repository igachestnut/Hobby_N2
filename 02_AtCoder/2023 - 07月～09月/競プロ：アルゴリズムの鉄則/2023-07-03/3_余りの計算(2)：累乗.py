#問題番号A29

def cheaker() :
    print(5**6 % (10**9+7))
    print(5**4 * 5**2)
    
    return


def main2() :
    """「繰り返し二乗法」について。

    求めたい指数 = a**0 + a**1 + ... + a**n
    という形で表す手法。（要領は電気電子工学でやった「ひっ算」と似ている）

    今回の問題は、
    　a**0, a**1...　それぞれに対応する余りを求める
    　どの指数（どのindex）を使うのか判定する。
    　合計を求める。
　　    という流れで正解することができる。

　　


    注意点
    ※加算、乗算と累乗　の違いを明確に意識すること。
    
    """
























def main() :
    """自分でやってみる (見る必要なし)


    10**9 +7 で割った余り。
    a**b
      aをb　回だけ　かける
　　　求めたいのは余り。

    乗数ごとに余りを記載して追加していく方式？
    　例えば a = 100
    　　b = 1 → (100 % (10**9+7)) →　100
        b = 2 →　　　　　　　　　　　 200
        b = 4 →                       400
        を最大値bまで行う。while i **2 <= b :？？？
        
    b // 2 を繰り返して、その値に該当する余りを足していく？
    そうすると、
    　10**9にたどり着くまでの計算量　logb
    　10**9から指数が０にたどり着くまでの計算量  logb
    で計算可能？

    #excess→過剰、余分なもの　数量や量が必要以上。

    bの数を2**xの
    　分割された状態で表すことができたらすごいいい。

    　イメージ
    　　[a ** 1, a**4, a**16]
        [ 100  ,  250,  4200]
        こんな感じで指数と対応させる。一番下がsumすると分かるてきな。

    　下から作ると、最大数の判定→b>iの場合終了
    　上から作ると、
    　　途中のiの計算が必要なくなる（理由：bを指数で足し算する際必要ない要素をスキップできる）
    　　しかし、最大量が分かんない。
    　　　というか。そもそも最大量の余りを計算するのがしんどい。
    　下から作るしかない。
    　　→というか次の要素を、一つ前の2倍にするという考え方を使う。
    　　　だから、



    
    　　　1番最初の状態の余りを求める（指数的には1）
    　　　↓
    　　　2番目の余り　＊２  (指数的には2)
    　　　↓
    　　　３番目の余り　＊２　（指数的には4）
    　　　↓
    　　　４番目の余り　＊２　（指数的には８）

        何回2倍するかという考え方。

        　2 ** 1
          2 ** 2
          2 ** 3
        　↓
        　2 ** iという書き方ができる。

    ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
        　
    さて、どのようにして、bの値（指数）に過不足なく2**iの値を繋げようか。
    数式にすると
    　b = 2 ** i1 + 2 ** i2 + 2 ** i3.....

    　このi1達をどのように求めるか。

    　リストを見ると
    　[22, 44, 88, ..... , 3024]
       1   2   4   ,,,,    2**i
    i  0   1   2   ,,,,    i
    と書くことができる。
    　だから、逆から、
        b - 2**index = ans
        ans >= 0 →　bを引き算して次のフロー
        ans <  0 →　bに何もせず、配列をそこだけ0にする。という手法
    　　　つまり、使う物だけ記載していく。

    
         


    
        
    
    """
    def judge(x, index) :
        """余りを記載したリストの●番目を使うかどうか判定する関数

        Parameters
        ------------
        x : int
            判定したい数。
        index : int
            2を底とする指数

        Return
        -----------
        bool
            使うならTrue,使わないならFalse
        """
        if x >= 2**index :
            return True
        else :
            return False
    def calculation(List) :
        """リストの中にある全ての数を乗算する関数

        Parameter
        -------
        List : list(int)
            全余りを記載したリスト

        Return
        --------
        int
            余り
        """
        ans = 1
        for i in range(len(List)) :
            ans *= List[i]
        return ans
        
    a,b = map(int,input().split())

    #1要素目（a**1だけ余りを求める。）
    excess_list = [a % (10**9 +7)]
    
    i = 2
    #2要素目以降
    while i <= b :
        #(一つ前の要素**２)%(余り)という考え。
        excess_list.append((excess_list[-1] ** 2) % (10**9 +7))
        i = i * 2

    #print(f"iの最大量は{i}")

    #作成したリストの余りを使う部分を査定
    for i in range(len(excess_list)-1, -1, -1) :
        if judge(b, i) :
            b = b - 2**i
        else :
            excess_list[i] = 1

    #print(excess_list)

    print(calculation(excess_list) % (10**9 +7))
    #print(sum(excess_list) % (10**9 +7))
    
    return


if __name__ == "__main__" :
    main()
    #cheaker()
