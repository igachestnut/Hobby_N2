""" #####################################################
発想

- i→j に行く際のエレベータの乗る回数。siguma_{i=1~N-1},siguma{j=i~N}

例で考えてみる
- 現在1階 
    現在がUの場合、どの階層にも1回乗るとたどり着ける。
- 現在2階
    現在がDの場合、1階には1 だが、それ以外はすべて2 
    Dの時、下に行く総数i-1
    Dの時、上に行く総数2*(N-i) 

    現在がUの場合
    Uの時、下に行く総数 2*(i-1)
    Uの時、上に行く総数 N-i
    ※iは1~Nの分布である。

...これにより、各階層におけるほかの階の行き方の総和をO(1)で求めることができた。
これをlen(S)だけ繰り返すと答えが出そう。
##################################################### """
def check() :
    return


def main() :
    S = input()
    N = len(S)
    result = 0
    for i in range(N) :
        if S[i] == "U" :
            result += 2*i + N-(i+1)
        else :
            result += i + 2*(N-(i+1))
    print(result)
    return


if __name__ == "__main__" :
    main()
    #check()
