目次
　・概略
　・知識
　・方法のメモ
　・コード解説用？

/////////////////////////////////////////////////////////////////////////////////
＜概略＞
　アイデアの殴り書き
　データ構造のMEMO

MMDのモーション計画ーーーーーーーーーーーーーーーーーーーーーーーーーーー
　dataは、プログラミング内に書くのではなく、
　csvファイルにすべて保存すればいいのでは？

　　頭の揺れ、パターン
　　貧乏ゆすり
　　のけぞる。
　　頭をかく　
　　左見る
　　右ミル
　　頭を動かす（前横、斜め。）
　　目の動き（頭の動きに連動して。絶対。）
　　瞬き（連動して。頭を動かし始め？）
　　　のデータ位はできそう？
　　動き研究
　
　　パターンと
　　誤差のパターンについて行えば？そうすればいいのでは？
　　　最終的に、
　　　　「パターンとランダム加減を調整すれば、
　　　　　問題なくＭＭＤをつくれるプログラムを作れるかもしれない」

　　　　→ただ、いちいち作って確認するのめんどいので、
　　　　　シミュレーションしたい感はある。
　　　　　配列を
　　　 　　 時間x
      　    座標y
　　　　　　　　z
　　　　　　みたいな感じにすることによって、シミュレーション的なことが可能？








ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
＜重要事項＞
座標設計
任意でつくる場合と、
適宜調整するバージョンが欲しい。

全てやるとなるとめっちゃ不自然になると思う。

せめて、無から不自然のない歩きモーションを作成する。プログラム。

頭の揺れ



立っている状態から、まっすぐ歩いて。行ける。

パラメータを調節すれば何とかなる。みたいなやつ。

作成する目標

　　　  横軸時間
　　X [          ]
座標Y [          ] 
　　Z [          ]
で、



matplotlibには、
　X[i],Y[i],Z[i]を渡して、一枚一枚作成してもらう。

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー























　プログラミング設計
　　データの取得
　　　↓
　　最終確認
　　→（enter）
　　　↓
　　処理開始





動きのメモ
　頭揺らす以外に
　腕の動きは、直線ではなく、少しカーブする？
　書き方は0.5秒で縦横指場所変更する。
　　→リアル。






うまくいくかは分からんが、
matplotlibで複数のグラフを出力して、
　gifにすると、シミュレーションっぽくなるかもしれない。


＜移動について＞

pltで作成
　
フォルダの生成
移動

この上をどのタイミングで行えばいいのかな？

作るだけ作って、一気に移動。
→ファイル情報をリストに保存。
　→for文で一気に移動する。
　こっちのほうがいいかも？
　　とりあえずこっち。できるだけ使用メモリを少なくできそうだから。

一つ一つ作ったら移動
→一番最初にフォルダを生成。
　→作ったその都度移動。





ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
構造
　詳しくはノートに

＜座標取得＞
＜人間らしい動き＞
＜シミュレーション＞
＜データ構造の保存＞
＜vmdかpyautoguiでMMDに出力＞

＜座標取得＞
＜人間らしい動き＞

　※検証：
　　全部Mainで行うと、動きの法則性が見え辛くなってしまう。
　　→検証用の簡単なプログラムを作成しよう。
　　　データ構造は悩み中。
　　　（目的は、
　　　　　「人間らしい揺れ」にする誤差パラメータの作成）

＜シミュレーション＞
    将来的に入れたいアイデア
    　・ただの点ではなく、
    　　　頭なら周りにポリゴンの点
    　　　手なら手の形にポリゴン
    　・
  
　・グラフの見る方向性の調整
　・
    
　重要タスク
  ・x,y,zはそれぞれの時間関数でのデータ列であり、
　　　今回は軌跡というより動いている風景を見たいので、
　　　時間tで何とかやりくりしたやつ？
　　　　3000回matplotlibに出力的なことをして、gifにしたい。
　　　→時間で拡張。リストの生成（for 文。）

　　　　書いて設計するように。




＜データ構造の保存＞



＜vmdかpyautoguiでMMDに出力＞


/////////////////////////////////////////////////////////////////////////////////
＜＜知識＞＞

＜共通＞
・defの挙動
　初期値（defult設定）
　
　defの定義内に
　　def cheak(x,y=5)
　　のようにyの値を決めていれば、
　　
　　何もない場合は初期値として
　　入っている場合（第二変数に何か数字が入っている場合）
　　その値が代わりに代入される。

　定義内の変数を直接指定することで、第〇因数が違う場合でも指定できる。

　　def cheak(num_x=1,num_y=2,num_z=3)
     
　　print(num_z = 4)
　　　でzだけ指定。


・作成要領
　matplotlibで作成できるpng（dpi=Defalt）で、30枚2.5MB,gif600KBだった。
　→3000枚2.5GB
・作成時間
　だいたい30枚で10秒
　→100倍で1000秒→15分ちょい。時間が足りない。ぬるっとは動かせないね。

＜座標取得＞
＜人間らしい動き＞
＜シミュレーション＞
constrained コンス-チュレイン　エド

・matplotlibに対して、適当なx,y,zを渡すとエラーを吐いた。
　理由
　　2変数関数 func_Z のグラフを描画するということは、
　　定義域である XY 平面上に格子状の点を2次元配列で作成して、
　　その各点 (x, y) の関数値 func_Z(x, y) を計算する必要があります。

　　なので、X, Y = np.meshgrid(x, y) でないといけません。
　　print() すれば、下記の変数は違うことがわかると思います。
	
	X, Y = np.meshgrid(x, y)
	print(X)
	print(x)

	print(Y)
	print(y)



＜データ構造の保存＞
os.rmdir("./test1")
　指定したフォルダを削除。　
　※.→今いるフォルダ
　　/test→その中にあるフォルダ。/で表す。


PermissionError: [Errno 13] Permission denied: '2023-01-07'


shutil.move(保存したいファイル,保存先)
例shutil.move(./test1/test.txt,./test2)
 元
  .(pyのあるフォルダ)
　　-test1
      -test.txt
    -test2

 結果
　.
   -test1
   -test2
     -test.txt
　　
　　　になる。
　　　元の場所にあったものは削除される。

 shutil.moveでできること
　・ファイルの移動
　・ファイルを移動してリネーム　→指定先フォルダにnameをかくだけ。
　・ディレクトリの移動
　・ディレクトリを移動してリネーム


--------------------------------------------------------------------------------
osメソッドの使い方。
中にあるファイルリストの取得
os.listdir


パスの指定をして取り出す
import glob
path = './dir/*.txt'
list = glob.glob(path)




<gifの作成>
from PLT import Image


img=Image.open(gifにしたいファイル)
pictures.append(img)

→画像情報を抽出。リストに保管

pictures[0].save(名前.gif, save_all = True,append_images=pictures[1:],optimize=True,duration=500,loop=0)
名前、
save_all →アニメーションとして保存するかどうか指定
append_images→画像オブジェクトのリストを指定
duration→画像の表示時間(500ミリ秒）
loop →繰り返し回数（0で無限回）













＜vmdかpyautoguiでMMDに出力＞
////////////////////////////////////////////////////////////////////////////////
＜方法＞











/////////////////////////////////////////////////////////////////////////////////
＜＜Error＞＞
    f.write(plt.savefig(name))
TypeError: write() argument must be str, not None
怒られた理由
　文字でないものを文字として使おうとするから。



raise Error("Destination path '%s' already exists" % real_dst)
shutil.Error: Destination path './simulation(png,gif)/2023-01-08\tmp4.png' already exists
→もし、移動先に名前が同じなpngがあった場合Errorを吐いて動かせない。
　もしあっても上書きもしくはなんとかできる方法をやらなくては。

































/////////////////////////////////////////////////////////////////////////////////
＜＜＜コード解説用MEMO＞＞＞


＜シミュレーション＞
    x,y,z = np.array(x),np.array(y),np.array(z)
    x_new, y_new = np.meshgrid(np.unique(x), np.unique(y))
    z_new = griddata((x, y), z, (x_new, y_new))

　　np型に変換、
　　zをx,yの二変数に対応した形に変換する。





//////////////////////////////////////////////////////////////////////////////
＜＜＜進捗状況＞＞＞
データを渡すとmatplotlibよりgif画像を作成・保存するプログラムができた。
→これからは、人間らしい動きのデータをどのように作ってみるのかというところ。


<タスク>

時間関数というかウエイトを確認する。
→MMDの情報を取得する方法を学んでからでもいいかもしれない。

目標
　matplotlibで、頂点のみで人間を書いてみる。


