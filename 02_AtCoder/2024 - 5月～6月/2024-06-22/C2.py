""" ##########################

縦方向にまたいだ回数w
→距離でOK

横方向にまたいだ回数u
→最短距離のタイルを踏めるかどうか。
※踏めない場合（ショートカットできない場合）
x=1 y=0 →x=2, y=0

横方向にまたぐ回数が厳密になれば、答えが出る。だろう。(Ans = 縦方向にまたいだ回数w + 横方向にまたいだ回数u)

基本ショートカットできる場合(タイルいっぱいを使用して移動できる場合)
abs(startx - endx) //2でOK

②小さいほう→大きいほうと考えましょう
①まず、x方向におけるタイルの距離は奇数なの？
①視点が右タイルから？左タイルまで？
④右タイルから左タイルまで？
③ショートカットできるほどwは存在する?


終了
print(u+w+extrau - 斜めショートカットした回数min(u,w))



######################## """

def cheaker() :
    return


def main() :
    Sx, Sy = map(int, input().split())
    Tx, Ty = map(int, input().split())
    
    w = abs(Sy - Ty) #縦方向における、理想的なまたいだ回数
    u = abs(Sx - Tx) //2 #横方向における、理想的なまたいだ回数
    


    extra_u = 0
    #横方向、特殊ケースの計算 
    #x方向において、小さいほうから大きいほうへ右に移動する場合を考える
    if abs(Sx - Tx) % 2 == 1 and w <= 0:#距離が奇数の場合 特殊ケースの計算
        if Sx < Tx :
            if (Sx + Sy) % 2 == 1 :#小さいほうの始点が右タイル
                extra_u = 1
        elif Tx < Sx :
            if (Tx + Ty) % 2 == 1 :#小さいほうの始点が右タイル
                extra_u = 1    
    
    print(f"u{u}, w{w}")
    print(f"extra_u{extra_u}")
        
    #距離の出力 縦にまたいだ回数+横にまたいだ回数
    print(u+w + extra_u)
    return


if __name__ == "__main__" :
    main()
    #cheaker()
