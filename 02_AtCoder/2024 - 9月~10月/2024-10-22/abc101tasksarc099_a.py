""" #####################################################
発想

1回の処理で置き換えられる文字の特性
- 置き換えしたいもじ1つ
- 置き換えられる文字 (K-1)

K=3の時、元の数値1つ, 変更数値=2個
N=4ならば、

ただし、初期ナンバーの位置がどこにあるのか知らないと、
上下に作業することになる。

0,1,2,3,4,5,6,7
-,-,-,1.-,-,-,-
K=3の時
8-(i+1) = 8-4=3 
N=5で、i=2(3番目の要素)の時
5-3 //2 
9  :      ans=3                     11//3=3
10 : K=4, ans=4 10//3 = 3 11//3 = 3 12//3=4
11 :                                13//3 =4
12 :                                14//3 = 4
13 :      ans=5                     15//3 = 5


...WA
もしKが10でNが10, A[i]=10のi=5の時、1回ですべて終わる。上下に分けたら間違い


//(K-1)でいい。
結局上下


##################################################### """
def check() :
    return


def main() :
    N, K = map(int, input().split())
    A = list(map(int, input().split()))
    result = 0
    for i in range(N) :
        if A[i] == 1 : #最小値の発見
            result += (i+K-2)//(K-1)
            result += (N-(i+1)+(K-2))//(K-1)
            break
    print(result)
    return

def main2() :
    N, K = map(int, input().split())
    A = list(map(int, input().split()))
    result = ((N-1)+(K-2))//(K-1)
    print(result)
    return

if __name__ == "__main__" :
    main2()
    #check()
