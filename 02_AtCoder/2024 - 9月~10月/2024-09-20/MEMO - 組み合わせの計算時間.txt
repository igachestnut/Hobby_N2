
このファイルを見てわかること
　・部分文字列の総種類数と連続部分文字列の総種類数を出力するアルゴリズムは違うこと。



＜題材：A = 1, 2,,,, N　で与えられるすべての組み合わせ総数の導出にかかる計算量＞

▼計算量「O(N*N!)」
　N = 文字をi種類選ぶときを考える。
　N! = その文字を選ぶ際、NCi のようになる。 NCi = N! /i! / (N-i)! 

  なので1000, 10**3くらいまでが限界かな? 
  →嘘。キョウプロの本より、20!が限界。
　　ではなぜ、プログラムは求めることができている？
　　多分階乗を求めるアルゴリズムが凄いんでしょう！

　...もしかしたら、
  N! = その文字を選ぶ際、NCi のようになる。 NCi = N! /i! / (N-i)! 
  これが間違っている可能性がある？


▼もし組み合わせの総数だけ出力に特化したら、、、?
  部分文字列の種類数が導出できる動的計画法を導入したら???

  NCi (計算量 O(N!))が, 
  計算量O(N)になるかもしれない?
  すると最終計算量は N^2 になって、
  10**4,くらいまで導出できるようになる?



▼本当にじゅれんつの公式　xCy と、 N(N+1)/2 が両方組み合わせを出力するのに適しているのか？


-------------------------------------
N = 4
A = [1,2,3,4]
組み合わせ総数
None = 0
1  2  3  4    =4
1,2  2,3  3,4 =3
1,2,3  2,3,4  =2
1,2,3,4       =1

10通り。

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
i (1~N) 

sum([4C1 for i in range(1, N+1)])
4C1, 4C2, 4C3, 4C4
  4,   6,   4,   1
= 15 通り

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
N(N+1)/2
N=4

4*5/2 = 10

10通り。

ーーーーーーーーーーーーーーーーーーーーーーーーーーー
結論
　①
　　「Ｃだと部分文字列の種類数を出力」。
　　「N(N+1)/2 だと連続部分文字列の種類数を出力」
　　している。

　　　これは分けて考えたほうがいい。

　②
　　前回勉強した動的計画法は、
　　部分文字列の出力の場合で扱うことができる！

　O(N)になる。
 
  ③
　　親父殿が疑問に思った、指の種類数を出力する問題は、
　　指N本が構成できる部分文字列の総種類数を出力せよという問題であるため、
　　動的計画法を適用することが出来そう！

　　注意：4C0, 4CNの最小最大量のケースをケアする必要がある。

















